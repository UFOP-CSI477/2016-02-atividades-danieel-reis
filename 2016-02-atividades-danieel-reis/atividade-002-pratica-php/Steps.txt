Folder: /var/www/html/git/2016-02-atividades-danieel-reis/2016-02-atividades-danieel-reis/atividade-002-pratica-php/petshop-laravel

0 - RELEASE PERMISSIONS FOLDER
  chmod 777 "folder" -R

1 - ALTER (FILE: app/Providers/AppServiceProvider) => Definir o tamanho da String
  ADD -> FUNCTION boot
    public function boot() {}
        Schema::defaultStringLength(191);
    }

2 - CREATE FILE: resources/views/app.blade.php (USE INTERFACE DEFAULT LARAVEL)
  <html>
  <head>
      @section('head')
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
      @show
  </head>
  <body>
  <div class="container">
      @yield('content')
  </div>

  @section('footer_scripts')
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
  @show
  </body>
  </html>

3 - MYSQL
  TERMINAL:
    mysql -u root -p

  TERMINAL MYSQL:
    CREATE DATABASE petshop;
    GRANT ALL ON petshop.* TO sispetshop@localhost IDENTIFIED BY '123456';

  CONFIGURATION DATABASE LARAVEL (FILE: .env)
    ALTER DB_DATABASE, DB_USERNAME, DB_PASSWORD (LINES 10,11,12)

  OPTION 1: INSERT DUMP
    TERMINAL:
      mysql -u root -p name_database < name_dump.sql

  OPTION 2: CREATE TABLES
    CREATE TABLE produtos(
      id INT(10) NOT NULL AUTO_INCREMENT,
      nome VARCHAR(45) NOT NULL,
      preco DECIMAL(10,2) NOT NULL,
      imagem VARCHAR(60) NOT NULL,
      created_at TIMESTAMP,
      updated_at TIMESTAMP,
      PRIMARY KEY(id)
    );

    CREATE TABLE users(
      id INT(10) NOT NULL AUTO_INCREMENT,
      name VARCHAR(191) NOT NULL,
      email VARCHAR(191) NOT NULL,
      password VARCHAR(191) NOT NULL,
      type SMALLINT(6) NOT NULL,
      remember_token VARCHAR(100),
      created_at TIMESTAMP,
      updated_at TIMESTAMP,
      PRIMARY KEY(id)
    );

    CREATE TABLE compras(
      id INT(10) NOT NULL AUTO_INCREMENT,
      id_user INT(10) NOT NULL,
      id_produto INT(10) NOT NULL,
      quantidade SMALLINT(6) NOT NULL,
      data DATETIME NOT NULL,
      created_at TIMESTAMP,
      updated_at TIMESTAMP,
      PRIMARY KEY(id),
      FOREIGN KEY (id_user) REFERENCES users(id),
      FOREIGN KEY (id_produto) REFERENCES produtos(id)
    );

  CREATE ALL (MIGRATION, CONTROLLER, RESOURCE)
    TERMINAL:
      php artisan make:model -m -c -r Produto
      php artisan make:model -m -c -r User
      php artisan make:model -m -c -r Compra
      php artisan make:controller UserController -r

  OBS: IF(OPTION == 2) DELETE UP AND DOWN (ALL CREATE...)
    EXAMPLE:
      public function up() { }
      public function down() { }

  OPTION 3: ALTER MIGRATIONS
    FOLDER: database/migrations/
    FILE ( ...create_users_table.php):
      public function up() {
          Schema::create('users', function (Blueprint $table) {
              $table->increments('id',10);
              $table->string('name',191);
              $table->string('email',191)->unique();
              $table->string('password',191);
              $table->smallInteger('type',6);
              $table->rememberToken();
              $table->timestamps();
          });
      }

    FILE ( ...create_produtos_table.php):
      public function up() {
          Schema::table('produtos', function (Blueprint $table) {
            $table->increments('id',10);
            $table->string('nome',45)->unique();
            $table->float('preco',10,2);
            $table->string('imagem',60);
            $table->smallInteger('type',6);
            $table->timestamps();
          });
      }

    FILE ( ...create_table_compras.php):
      public function up()
      {
          Schema::table('compras', function (Blueprint $table) {
            $table->increments('id',10);
            $table->integer('id_user',10);
            $table->integer('id_produto',10);
            $table->smallInteger('quantidade',6);
            $table->DateTime('data');
            $table->foreign('id_user')->references('id_user')->on('users')->onDelete('cascade');
            $table->foreign('id_produto')->references('id_produto')->on('produtos')->onDelete('cascade');
            $table->timestamps();
          });
      }

      TERMINAL:
        php artisan migrate

5 - CREATE ROUTES (EDIT FILE: routes/web.php)
  INSERT NEW ROUTES
    INIT FILE:
      ADD
        use App\Produto;
        use App\Users;
        use App\Compra;
    END FILE:
      ADD
        Route::get('/', function () {
          return view('welcome');
        });
        Route::resource('/produtos','ProdutoController');
        Route::resource('/users','UserController');
        Route::resource('/compras','CompraController');

    TERMINAL:
      php artisan route:list

6 - WRITE -> CONTROLLER (FOLDER: app/Http/Controllers)
  EXAMPLE (FILE: AlunoController):

  WRITE:
    use Illuminate\Http\Request;
    use App\Http\Requests;
    use App\Aluno;

    public function index() {
      $alunos = Aluno::all();
      return view('alunos.index')->with('alunos', $alunos);
    }

    public function create() {
      return view('alunos.create');
    }

    public function store(Request $request) {
      Aluno::create($request->all());
      return redirect('/alunos');
    }

    public function show($id) {
      $aluno = Aluno::findOrFail($id);
      return view('alunos.show', ['aluno' => $aluno]);
    }

    public function edit($id) {
      $aluno = Aluno::findOrFail($id);
      return view('alunos.edit')->with('aluno', $aluno);
    }

    public function update(Request $request, $id) {

    }

    public function destroy($id) {
      $aluno = Aluno::findOrFail($id);
      $aluno->delete();
      return redirect('alunos')->with('message','Aluno excluído!');
    }

7 - MODEL -> ALL MODELS
INSERT (fillable -> PARAMETERS DATABASE)
class Disciplina extends Model
{
    protected $fillable = ['nome','codigo','carga'];
}

8 - CREATE VIEWS (FOLDER: resources/views)
  CREATE FOLDER area_geral
    CREATE FILE: index.blade.php -> MOSTRA A LISTA DE PRODUTOS E PERMITE BUSCAR UM PRODUTO
    CREATE FILE: produto.blade.php -> MOSTRA NOME, PREÇO E FOTO -> PERMITE INSERIR NO CARRINHO
                                        (Formato do arquivo show.blade.php)
  CREATE FOLDER area_cliente
    CREATE FILE: index.blade.php -> MOSTRA A LISTA DE PRODUTOS NO CARRINHO E GERAR BOLETO
    CREATE FILE: produtosadquiridos.blade.php -> MOSTRA A LISTA DE PRODUTOS ADQUIRIDOS
                                        (Formato do arquivo index.blade.php)
    CREATE FILE: dadospessoais.blade.php -> MOSTRA OS DADOS PESSOAIS E PERMITE EDITAR (NOME, EMAIL, SENHA)

  CREATE FOLDER area_adm
    CREATE FILE: index.blade.php -> MOSTRA A LISTA DE CLIENTES
    CREATE FILE: produtoadm.blade.php -> MOSTRA O PRODUTO E PERMITE EDITAR OU EXCLUIR
    CREATE FILE: produtoop.blade.php -> MOSTRA O PRODUTO E PERMITE EDITAR

  EXAMPLE:
    FILE: index.blade.php
      @extends('app')
      @section('content')
      <title>Acadêmico</title>
      <h1>Lista de Alunos</h1>
      <a href="/alunos/create">Adicionar</a>

      <table class="table">
        @foreach ($alunos as $a)
        <tr>
          <td>{{ $a->id }}</td>
          <td><a href="/alunos/{{ $a->id }}">{{ $a->nome }}</a></td>
        </tr>
        @endforeach
      </table>
      @stop

    FILE: show.blade.php
      @extends('app')
      @section('content')
      <title>Acadêmico</title>
      <h1>Dados do(a) Aluno(a)</h1>
      <p>Nome: {{ $aluno->nome }}</p>
      <a href="/alunos">Voltar</a>
      @stop

    FILE: create.blade.php

9 - DEFINE PERMISSIONS
    CLIENTE ->
      'area_geral/index.blade.php', 'area_geral/produto.blade.php',
      'area_cliente/index.blade.php', 'area_cliente/produtosadquiridos.blade.php',
      'area_cliente/dadospessoais.blade.php'
    OPERADOR ->
      'area_geral/index.blade.php', 'area_adm/produtoop.blade.php',
      'area_cliente/index.blade.php', 'area_cliente/produtosadquiridos.blade.php',
      'area_cliente/dadospessoais.blade.php'
    ADMINISTRATIVO ->
      'area_geral/index.blade.php', 'area_adm/produtoadm.blade.php', 'area_adm/index.blade.php'
      'area_cliente/index.blade.php', 'area_cliente/produtosadquiridos.blade.php',
      'area_cliente/dadospessoais.blade.php'






OBS: CREATE MODEL OR MIGRATION OR CONTROLLER
1 - CREATE MODELS (OBS: Começa com letra maiúscula e é no singular)
  TERMINAL:
    php artisan make:model Produto
    php artisan make:model User
    php artisan make:model Compra

2 - CREATE MIGRATION -> REFRESH TABLES (ADD CREATED_AT AND UPDATED_AT)
  TERMINAL:
    php artisan make:migration --table=produtos alter_produtos_table
    php artisan make:migration --table=users alter_users_table
    php artisan make:migration --table=compras alter_compras_table
    php artisan route:list

3 - CREATE CONTROLLER
  TERMINAL:
    php artisan make:controller ProdutoController -r
    php artisan make:controller UserController -r
    php artisan make:controller CompraController -r
    php artisan route:list

FONTE DO CÓDIGO PARA GERAR O BOLETO: https://forum.imasters.com.br/topic/523750-saiba-como-converter-os-boletos-do-projeto-boletophp-em-pdf/


TEST INSERT:
php artisan tinker
$disciplina = new App\Disciplina;
$disciplina->nome = "Sistemas WEB I";
$disciplina->codigo = "CSI477";
$disciplina->carga = 72;
$disciplina->save();

$produto = new App\Produto;
$produto->nome = "LIXA 320";
$produto->preco = "3.20";
$produto->imagem = "";
$produto->save();


PESQUISAR:
IMAGEM NA TELA USANDO TABELA NO LARAVEL
